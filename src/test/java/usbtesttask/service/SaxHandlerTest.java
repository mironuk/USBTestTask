package usbtesttask.service;

import static org.junit.Assert.assertEquals;
import static usbtesttask.common.CommonConstants.DEFAULT_ENCODING;
import static usbtesttask.common.TestConstants.TEST_XML_FILE_CLIENTS_NUMBER;
import static usbtesttask.common.TestConstants.TEST_XML_FILE_PATH;
import static usbtesttask.common.TestConstants.TEST_XML_FILE_TRANSACTIONS_NUMBER;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import usbtesttask.TestBase;
import usbtesttask.data.repository.ClientRepository;
import usbtesttask.data.repository.TransactionRepository;

public class SaxHandlerTest extends TestBase {

    @Autowired
    private SaxHandler saxHandler;

    @Autowired
    private ClientRepository clientRepository;

    @Autowired
    private TransactionRepository transactionRepository;

    @Before
    public void init() {
        transactionRepository.deleteAllNotCascaded();
        clientRepository.deleteAllNotCascaded();
    }

    @After
    public void tearDown() {
        transactionRepository.deleteAllNotCascaded();
        clientRepository.deleteAllNotCascaded();
    }

    /**
     * Tests for parsing test XML file which was previously generated by
     * {@link usbtesttask.service.TransactionsXmlFileCreatorTest}.<br/><br/>
     * Depends on successfull test run of {@link usbtesttask.service.TransactionsXmlFileCreatorTest}.<br/><br/>
     * Test XML file is not deleted before or after tests so these two tests can be run in any order.
     *
     * @throws ParserConfigurationException
     * @throws SAXException
     * @throws IOException
     */
    @Test
    public void testSaxHandler() throws ParserConfigurationException, SAXException, IOException {
        InputStream inputStream = new FileInputStream(TEST_XML_FILE_PATH);
        Reader reader = new InputStreamReader(inputStream, DEFAULT_ENCODING);

        InputSource inputSource = new InputSource(reader);
        inputSource.setEncoding(DEFAULT_ENCODING);

        SAXParserFactory factory = SAXParserFactory.newInstance();
        SAXParser parser = factory.newSAXParser();
        parser.parse(inputSource, saxHandler);

        assertEquals(TEST_XML_FILE_TRANSACTIONS_NUMBER, saxHandler.getTransactionsNumber());
        assertEquals(TEST_XML_FILE_TRANSACTIONS_NUMBER, transactionRepository.count());
        assertEquals(TEST_XML_FILE_CLIENTS_NUMBER, clientRepository.count());
    }

}
